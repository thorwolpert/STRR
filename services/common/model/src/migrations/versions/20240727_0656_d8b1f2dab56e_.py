"""empty message

Revision ID: d8b1f2dab56e
Revises: a3c9d7aec165
Create Date: 2024-07-27 06:56:49.782100

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd8b1f2dab56e'
down_revision = 'f8e41c37e62c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('events',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('event_type', sa.Enum('APPLICATION', 'REGISTRATION', 'USER', name='eventtype'), nullable=False),
    sa.Column('event_name', sa.Enum('APPLICATION_SUBMITTED', 'INVOICE_GENERATED', 'PAYMENT_COMPLETE', 'PENDING_AUTO_APPROVAL_PROCESSING', 'AUTO_APPROVAL_FULL_REVIEW', 'AUTO_APPROVAL_PROVISIONAL', 'AUTO_APPROVAL_APPROVED', 'FULL_REVIEW_IN_PROGRESS', 'MANUALLY_APPROVED', 'MANUALLY_DENIED', 'MORE_INFORMATION_REQUESTED', 'REGISTRATION_CREATED', 'CERTIFICATE_ISSUED', 'EXPIRED', 'NON_COMPLIANCE_SUSPENDED', name='eventname'), nullable=False),
    sa.Column('details', sa.String(), nullable=True),
    sa.Column('created_date', sa.DateTime(), server_default=sa.text('(NOW())'), nullable=False),
    sa.Column('visible_to_applicant', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('registration_id', sa.Integer(), nullable=True),
    sa.Column('application_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['application.id'], ),
    sa.ForeignKeyConstraint(['registration_id'], ['registrations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_events_application_id'), ['application_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_events_event_type'), ['event_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_events_registration_id'), ['registration_id'], unique=False)

    op.drop_table('event_records')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('event_records',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('event_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('message', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_date', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('visible_to_end_user', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('registration_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['registration_id'], ['registrations.id'], name='event_records_registration_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='event_records_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='event_records_pkey')
    )
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('srid > 0 AND srid <= 998999', name='spatial_ref_sys_srid_check'),
    sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    )
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_events_registration_id'))
        batch_op.drop_index(batch_op.f('ix_events_event_type'))
        batch_op.drop_index(batch_op.f('ix_events_application_id'))

    op.drop_table('events')
    # ### end Alembic commands ###
