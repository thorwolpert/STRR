"""empty message

Revision ID: a6abe20bd998
Revises: 730a68e06df1
Create Date: 2024-10-10 21:51:00.019879

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a6abe20bd998'
down_revision = '730a68e06df1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('addresses_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('country', sa.String(), autoincrement=False, nullable=False),
    sa.Column('street_address', sa.String(), autoincrement=False, nullable=False),
    sa.Column('street_address_additional', sa.String(), autoincrement=False, nullable=True),
    sa.Column('city', sa.String(), autoincrement=False, nullable=False),
    sa.Column('province', sa.String(), autoincrement=False, nullable=False),
    sa.Column('postal_code', sa.String(), autoincrement=False, nullable=False),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_addresses_created_by_id_users')),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], name=op.f('fk_addresses_modified_by_id_users')),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    op.create_table('registrations_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('registration_type', sa.String(), autoincrement=False, nullable=True),
    sa.Column('registration_number', sa.String(), autoincrement=False, nullable=True),
    sa.Column('sbc_account_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('ACTIVE', 'EXPIRED', 'SUSPENDED', 'CANCELLED', name='registrationstatus', create_type=False), autoincrement=False, nullable=False),
    sa.Column('start_date', sa.DateTime(), autoincrement=False, nullable=False),
    sa.Column('expiry_date', sa.DateTime(), autoincrement=False, nullable=False),
    sa.Column('updated_date', sa.DateTime(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_registrations_created_by_id_users')),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], name=op.f('fk_registrations_modified_by_id_users')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_registrations_user_id_users')),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('registrations_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_registrations_history_sbc_account_id'), ['sbc_account_id'], unique=False)

    op.create_table('contacts_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('firstname', sa.String(length=1000), autoincrement=False, nullable=False),
    sa.Column('lastname', sa.String(length=1000), autoincrement=False, nullable=False),
    sa.Column('middlename', sa.String(length=1000), autoincrement=False, nullable=True),
    sa.Column('address_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('email', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('preferredname', sa.String(), autoincrement=False, nullable=True),
    sa.Column('phone_extension', sa.String(), autoincrement=False, nullable=True),
    sa.Column('fax_number', sa.String(), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('date_of_birth', sa.Date(), autoincrement=False, nullable=True),
    sa.Column('social_insurance_number', sa.String(), autoincrement=False, nullable=True),
    sa.Column('business_number', sa.String(), autoincrement=False, nullable=True),
    sa.Column('job_title', sa.String(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.id'], name=op.f('fk_contacts_address_id_addresses')),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    op.create_table('documents_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('file_name', sa.String(), autoincrement=False, nullable=False),
    sa.Column('file_type', sa.String(), autoincrement=False, nullable=False),
    sa.Column('path', sa.String(), autoincrement=False, nullable=False),
    sa.Column('registration_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_documents_created_by_id_users')),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], name=op.f('fk_documents_modified_by_id_users')),
    sa.ForeignKeyConstraint(['registration_id'], ['registrations.id'], name=op.f('fk_documents_registration_id_registrations')),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    op.create_table('platforms_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('legal_name', sa.String(length=150), autoincrement=False, nullable=False),
    sa.Column('home_jurisdiction', sa.String(length=150), autoincrement=False, nullable=False),
    sa.Column('business_number', sa.String(length=150), autoincrement=False, nullable=True),
    sa.Column('cpbc_licence_number', sa.String(length=50), autoincrement=False, nullable=True),
    sa.Column('primary_non_compliance_notice_email', sa.String(length=100), autoincrement=False, nullable=False),
    sa.Column('secondary_non_compliance_notice_email', sa.String(length=100), autoincrement=False, nullable=True),
    sa.Column('primary_take_down_request_email', sa.String(length=100), autoincrement=False, nullable=False),
    sa.Column('secondary_take_down_request_email', sa.String(length=100), autoincrement=False, nullable=True),
    sa.Column('attorney_name', sa.String(length=150), autoincrement=False, nullable=True),
    sa.Column('listing_size', sa.Enum('GREATER_THAN_THOUSAND', 'LESS_THAN_THOUSAND', name='listingsize'), autoincrement=False, nullable=True),
    sa.Column('mailing_address_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('registered_office_attorney_mailing_address_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_platforms_created_by_id_users')),
    sa.ForeignKeyConstraint(['mailing_address_id'], ['addresses.id'], name=op.f('fk_platforms_mailing_address_id_addresses')),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], name=op.f('fk_platforms_modified_by_id_users')),
    sa.ForeignKeyConstraint(['registered_office_attorney_mailing_address_id'], ['addresses.id'], name=op.f('fk_platforms_registered_office_attorney_mailing_address_id_addresses')),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('platforms_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_platforms_history_legal_name'), ['legal_name'], unique=False)

    op.create_table('rental_properties_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('nickname', sa.String(), autoincrement=False, nullable=True),
    sa.Column('parcel_identifier', sa.String(), autoincrement=False, nullable=True),
    sa.Column('local_business_licence', sa.String(), autoincrement=False, nullable=True),
    sa.Column('local_business_licence_expiry_date', sa.Date(), autoincrement=False, nullable=True),
    sa.Column('property_type', postgresql.ENUM('PRIMARY', 'SECONDARY', 'ACCESSORY', 'FLOAT_HOME', 'OTHER', name='propertytype', create_type=False), autoincrement=False, nullable=False),
    sa.Column('ownership_type', postgresql.ENUM('OWN', 'RENT', 'CO_OWN', name='ownershiptype', create_type=False), autoincrement=False, nullable=False),
    sa.Column('is_principal_residence', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('rental_act_accepted', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('pr_exempt_reason', sa.String(), autoincrement=False, nullable=True),
    sa.Column('service_provider', sa.String(), autoincrement=False, nullable=True),
    sa.Column('address_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('registration_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.id'], name=op.f('fk_rental_properties_address_id_addresses')),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_rental_properties_created_by_id_users')),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], name=op.f('fk_rental_properties_modified_by_id_users')),
    sa.ForeignKeyConstraint(['registration_id'], ['registrations.id'], name=op.f('fk_rental_properties_registration_id_registrations')),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    op.create_table('platform_brands',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('website', sa.String(length=500), nullable=False),
    sa.Column('platform_id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_platform_brands_created_by_id_users')),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], name=op.f('fk_platform_brands_modified_by_id_users')),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], name=op.f('fk_platform_brands_platform_id_platforms')),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('platform_brands', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_platform_brands_name'), ['name'], unique=False)

    op.create_table('platform_brands_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=150), autoincrement=False, nullable=False),
    sa.Column('website', sa.String(length=500), autoincrement=False, nullable=False),
    sa.Column('platform_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_platform_brands_created_by_id_users')),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], name=op.f('fk_platform_brands_modified_by_id_users')),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], name=op.f('fk_platform_brands_platform_id_platforms')),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('platform_brands_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_platform_brands_history_name'), ['name'], unique=False)

    op.create_table('platform_registration',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('registration_id', sa.Integer(), nullable=False),
    sa.Column('platform_id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_platform_registration_created_by_id_users')),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], name=op.f('fk_platform_registration_modified_by_id_users')),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], name=op.f('fk_platform_registration_platform_id_platforms')),
    sa.ForeignKeyConstraint(['registration_id'], ['registrations.id'], name=op.f('fk_platform_registration_registration_id_registrations')),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_table('platform_registration_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('registration_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('platform_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_platform_registration_created_by_id_users')),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], name=op.f('fk_platform_registration_modified_by_id_users')),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], name=op.f('fk_platform_registration_platform_id_platforms')),
    sa.ForeignKeyConstraint(['registration_id'], ['registrations.id'], name=op.f('fk_platform_registration_registration_id_registrations')),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    op.create_table('platform_representatives',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('platform_id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['contact_id'], ['contacts.id'], name=op.f('fk_platform_representatives_contact_id_contacts')),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_platform_representatives_created_by_id_users')),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], name=op.f('fk_platform_representatives_modified_by_id_users')),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], name=op.f('fk_platform_representatives_platform_id_platforms')),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_table('platform_representatives_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('contact_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('platform_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['contacts.id'], name=op.f('fk_platform_representatives_contact_id_contacts')),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_platform_representatives_created_by_id_users')),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], name=op.f('fk_platform_representatives_modified_by_id_users')),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], name=op.f('fk_platform_representatives_platform_id_platforms')),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    op.create_table('property_contacts_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('is_primary', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('contact_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('property_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['contacts.id'], name=op.f('fk_property_contacts_contact_id_contacts')),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_property_contacts_created_by_id_users')),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], name=op.f('fk_property_contacts_modified_by_id_users')),
    sa.ForeignKeyConstraint(['property_id'], ['rental_properties.id'], name=op.f('fk_property_contacts_property_id_rental_properties')),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    op.create_table('property_listings_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('platform', sa.String(), autoincrement=False, nullable=True),
    sa.Column('url', sa.String(), autoincrement=False, nullable=False),
    sa.Column('type', sa.String(), autoincrement=False, nullable=True),
    sa.Column('property_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_property_listings_created_by_id_users')),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], name=op.f('fk_property_listings_modified_by_id_users')),
    sa.ForeignKeyConstraint(['property_id'], ['rental_properties.id'], name=op.f('fk_property_listings_property_id_rental_properties')),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )

    with op.batch_alter_table('account_roles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('modified', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('created_by_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('modified_by_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_account_roles_modified_by_id_users'), 'users', ['modified_by_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_account_roles_created_by_id_users'), 'users', ['created_by_id'], ['id'])

    with op.batch_alter_table('addresses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('modified', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('created_by_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('modified_by_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('version', sa.Integer(), nullable=False))
        batch_op.drop_index('ix_addresses_city')
        batch_op.drop_index('ix_addresses_street_address')
        batch_op.create_foreign_key(batch_op.f('fk_addresses_modified_by_id_users'), 'users', ['modified_by_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_addresses_created_by_id_users'), 'users', ['created_by_id'], ['id'])

    with op.batch_alter_table('application', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('modified', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('created_by_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('modified_by_id', sa.Integer(), nullable=True))
        batch_op.drop_index('ix_application_status')
        batch_op.drop_index('ix_application_type')
        batch_op.create_index(batch_op.f('ix_application_type'), ['type'], unique=False)
        batch_op.create_foreign_key(batch_op.f('fk_application_modified_by_id_users'), 'users', ['modified_by_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_application_created_by_id_users'), 'users', ['created_by_id'], ['id'])

    with op.batch_alter_table('certificates', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('modified', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('created_by_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('modified_by_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_certificates_modified_by_id_users'), 'users', ['modified_by_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_certificates_created_by_id_users'), 'users', ['created_by_id'], ['id'])

    with op.batch_alter_table('contacts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('job_title', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('version', sa.Integer(), nullable=False))
        batch_op.alter_column('address_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_index('ix_contacts_fullname')

    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('modified', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('created_by_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('modified_by_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('version', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(batch_op.f('fk_documents_created_by_id_users'), 'users', ['created_by_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_documents_modified_by_id_users'), 'users', ['modified_by_id'], ['id'])

    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.drop_index('ix_events_application_id')
        batch_op.drop_index('ix_events_event_type')
        batch_op.drop_index('ix_events_registration_id')
        batch_op.create_index(batch_op.f('ix_events_registration_id'), ['registration_id'], unique=False)

    with op.batch_alter_table('platforms', schema=None) as batch_op:
        batch_op.add_column(sa.Column('home_jurisdiction', sa.String(length=150), nullable=False))
        batch_op.add_column(sa.Column('cpbc_licence_number', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('primary_non_compliance_notice_email', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('secondary_non_compliance_notice_email', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('primary_take_down_request_email', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('secondary_take_down_request_email', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('attorney_name', sa.String(length=150), nullable=True))
        batch_op.add_column(sa.Column('listing_size', postgresql.ENUM('GREATER_THAN_THOUSAND', 'LESS_THAN_THOUSAND', name='listingsize', create_type=False), nullable=True))
        batch_op.add_column(sa.Column('mailing_address_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('registered_office_attorney_mailing_address_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('created', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('modified', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('created_by_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('modified_by_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('version', sa.Integer(), nullable=False))
        batch_op.alter_column('business_number',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.create_index(batch_op.f('ix_platforms_legal_name'), ['legal_name'], unique=False)
        batch_op.drop_constraint('fk_platforms_registration_id_registrations', type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_platforms_registered_office_attorney_mailing_address_id_addresses'), 'addresses', ['registered_office_attorney_mailing_address_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_platforms_mailing_address_id_addresses'), 'addresses', ['mailing_address_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_platforms_modified_by_id_users'), 'users', ['modified_by_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_platforms_created_by_id_users'), 'users', ['created_by_id'], ['id'])
        batch_op.drop_column('registration_id')

    with op.batch_alter_table('property_contacts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('modified', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('created_by_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('modified_by_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('version', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(batch_op.f('fk_property_contacts_modified_by_id_users'), 'users', ['modified_by_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_property_contacts_created_by_id_users'), 'users', ['created_by_id'], ['id'])

    with op.batch_alter_table('property_listings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('modified', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('created_by_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('modified_by_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('version', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(batch_op.f('fk_property_listings_created_by_id_users'), 'users', ['created_by_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_property_listings_modified_by_id_users'), 'users', ['modified_by_id'], ['id'])

    with op.batch_alter_table('registrations', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('modified', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('created_by_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('modified_by_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('version', sa.Integer(), nullable=False))
        batch_op.drop_index('ix_registrations_registration_number')
        batch_op.drop_index('ix_registrations_registration_type')
        batch_op.drop_index('ix_registrations_sbc_account_id')
        batch_op.drop_index('ix_registrations_status')
        batch_op.create_index(batch_op.f('ix_registrations_sbc_account_id'), ['sbc_account_id'], unique=False)
        batch_op.create_foreign_key(batch_op.f('fk_registrations_modified_by_id_users'), 'users', ['modified_by_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_registrations_created_by_id_users'), 'users', ['created_by_id'], ['id'])

    with op.batch_alter_table('rental_properties', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('modified', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('created_by_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('modified_by_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('version', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(batch_op.f('fk_rental_properties_modified_by_id_users'), 'users', ['modified_by_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_rental_properties_created_by_id_users'), 'users', ['created_by_id'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('ix_users_idp_userid')
        batch_op.drop_index('ix_users_username')
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.create_index('ix_users_username', ['username'], unique=False)
        batch_op.create_index('ix_users_idp_userid', ['idp_userid'], unique=False)

    with op.batch_alter_table('rental_properties', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_rental_properties_created_by_id_users'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_rental_properties_modified_by_id_users'), type_='foreignkey')
        batch_op.drop_column('version')
        batch_op.drop_column('modified_by_id')
        batch_op.drop_column('created_by_id')
        batch_op.drop_column('modified')
        batch_op.drop_column('created')

    with op.batch_alter_table('registrations', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_registrations_created_by_id_users'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_registrations_modified_by_id_users'), type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_registrations_sbc_account_id'))
        batch_op.create_index('ix_registrations_status', ['status'], unique=False)
        batch_op.create_index('ix_registrations_sbc_account_id', ['sbc_account_id'], unique=False)
        batch_op.create_index('ix_registrations_registration_type', ['registration_type'], unique=False)
        batch_op.create_index('ix_registrations_registration_number', ['registration_number'], unique=True)
        batch_op.drop_column('version')
        batch_op.drop_column('modified_by_id')
        batch_op.drop_column('created_by_id')
        batch_op.drop_column('modified')
        batch_op.drop_column('created')

    with op.batch_alter_table('property_listings', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_property_listings_modified_by_id_users'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_property_listings_created_by_id_users'), type_='foreignkey')
        batch_op.drop_column('version')
        batch_op.drop_column('modified_by_id')
        batch_op.drop_column('created_by_id')
        batch_op.drop_column('modified')
        batch_op.drop_column('created')

    with op.batch_alter_table('property_contacts', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_property_contacts_created_by_id_users'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_property_contacts_modified_by_id_users'), type_='foreignkey')
        batch_op.drop_column('version')
        batch_op.drop_column('modified_by_id')
        batch_op.drop_column('created_by_id')
        batch_op.drop_column('modified')
        batch_op.drop_column('created')

    with op.batch_alter_table('platforms', schema=None) as batch_op:
        batch_op.add_column(sa.Column('registration_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(batch_op.f('fk_platforms_created_by_id_users'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_platforms_modified_by_id_users'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_platforms_mailing_address_id_addresses'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_platforms_registered_office_attorney_mailing_address_id_addresses'), type_='foreignkey')
        batch_op.create_foreign_key('fk_platforms_registration_id_registrations', 'registrations', ['registration_id'], ['id'])
        batch_op.drop_index(batch_op.f('ix_platforms_legal_name'))
        batch_op.alter_column('business_number',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.drop_column('version')
        batch_op.drop_column('modified_by_id')
        batch_op.drop_column('created_by_id')
        batch_op.drop_column('modified')
        batch_op.drop_column('created')
        batch_op.drop_column('registered_office_attorney_mailing_address_id')
        batch_op.drop_column('mailing_address_id')
        batch_op.drop_column('listing_size')
        batch_op.drop_column('attorney_name')
        batch_op.drop_column('secondary_take_down_request_email')
        batch_op.drop_column('primary_take_down_request_email')
        batch_op.drop_column('secondary_non_compliance_notice_email')
        batch_op.drop_column('primary_non_compliance_notice_email')
        batch_op.drop_column('cpbc_licence_number')
        batch_op.drop_column('home_jurisdiction')

    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_events_registration_id'))
        batch_op.create_index('ix_events_registration_id', ['registration_id'], unique=False)
        batch_op.create_index('ix_events_event_type', ['event_type'], unique=False)
        batch_op.create_index('ix_events_application_id', ['application_id'], unique=False)

    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_documents_modified_by_id_users'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_documents_created_by_id_users'), type_='foreignkey')
        batch_op.drop_column('version')
        batch_op.drop_column('modified_by_id')
        batch_op.drop_column('created_by_id')
        batch_op.drop_column('modified')
        batch_op.drop_column('created')

    with op.batch_alter_table('contacts', schema=None) as batch_op:
        batch_op.create_index('ix_contacts_fullname', [sa.text("((firstname::text || ' '::text) || lastname::text)")], unique=False)
        batch_op.alter_column('address_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('version')
        batch_op.drop_column('job_title')

    with op.batch_alter_table('certificates', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_certificates_created_by_id_users'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_certificates_modified_by_id_users'), type_='foreignkey')
        batch_op.drop_column('modified_by_id')
        batch_op.drop_column('created_by_id')
        batch_op.drop_column('modified')
        batch_op.drop_column('created')

    with op.batch_alter_table('application', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_application_created_by_id_users'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_application_modified_by_id_users'), type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_application_type'))
        batch_op.create_index('ix_application_type', ['type'], unique=False)
        batch_op.create_index('ix_application_status', ['status'], unique=False)
        batch_op.drop_column('modified_by_id')
        batch_op.drop_column('created_by_id')
        batch_op.drop_column('modified')
        batch_op.drop_column('created')

    with op.batch_alter_table('addresses', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_addresses_created_by_id_users'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_addresses_modified_by_id_users'), type_='foreignkey')
        batch_op.create_index('ix_addresses_street_address', ['street_address'], unique=False)
        batch_op.create_index('ix_addresses_city', ['city'], unique=False)
        batch_op.drop_column('version')
        batch_op.drop_column('modified_by_id')
        batch_op.drop_column('created_by_id')
        batch_op.drop_column('modified')
        batch_op.drop_column('created')

    with op.batch_alter_table('account_roles', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_account_roles_created_by_id_users'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_account_roles_modified_by_id_users'), type_='foreignkey')
        batch_op.drop_column('modified_by_id')
        batch_op.drop_column('created_by_id')
        batch_op.drop_column('modified')
        batch_op.drop_column('created')

    op.drop_table('property_listings_history')
    op.drop_table('property_contacts_history')
    op.drop_table('platform_representatives_history')
    op.drop_table('platform_representatives')
    op.drop_table('platform_registration_history')
    op.drop_table('platform_registration')
    with op.batch_alter_table('platform_brands_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_platform_brands_history_name'))

    op.drop_table('platform_brands_history')
    with op.batch_alter_table('platform_brands', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_platform_brands_name'))

    op.drop_table('platform_brands')
    op.drop_table('rental_properties_history')
    with op.batch_alter_table('platforms_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_platforms_history_legal_name'))

    op.drop_table('platforms_history')
    op.drop_table('documents_history')
    op.drop_table('contacts_history')
    with op.batch_alter_table('registrations_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_registrations_history_sbc_account_id'))

    op.drop_table('registrations_history')
    op.drop_table('addresses_history')
    # ### end Alembic commands ###
